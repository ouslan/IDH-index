---
title: "Graph development"
format:
  html:
    code-fold: true
jupyter: python3
---

```{python}
import os
os.chdir("..")
```

```{python}
import world_bank_data as wb
from src.data.data_pull import DataPull
import polars as pl
import pandas as pd
import os
import ibis

ibis.options.interactive = True
dp = DataPull()
```


```{python}
dp.conn.table("gnitable")
```


```{python}
_year = 2019
capita = wb.get_series(
    "NY.GNP.PCAP.PP.CD",
    country="PR",
    simplify_index=True,
    date=str(_year),
)
constant = wb.get_series(
    "NY.GNP.PCAP.PP.KD",
    country="PR",
    simplify_index=True,
    date=str(_year),
)
life_exp = wb.get_series(
            "SP.DYN.LE00.IN", 
              country="PR",
  simplify_index=True,
  date=str(_year)
                    )


df = pl.DataFrame([
  pl.Series("year", [_year], dtype=pl.Int64),
  pl.Series("capita", [capita], dtype=pl.Float64),
  pl.Series("constant", [constant], dtype=pl.Float64),
  pl.Series("life_exp", [life_exp], dtype=pl.Float64)
  ])
print(df)
```


```{python}
_year = 2019
country = "PR"

# List of series to fetch
indicators = [
    "NY.GNP.PCAP.PP.CD",  # GNP per capita (current USD)
    "NY.GNP.PCAP.PP.KD",  # GNP per capita (constant USD)
    "SP.DYN.LE00.IN",     # Life expectancy at birth
]

# Fetch all series at once
data = wb.get_series(indicators, country=country, simplify_index=True, date=str(_year))

# Now 'data' contains the data for all the series
print(data)

```
